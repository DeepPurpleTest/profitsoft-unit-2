version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: unit-2-db
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - ${EXTERNAL_DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 8s
      timeout: 4s
      retries: 2
    networks:
      - unit-2

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: unit-2-backend
    environment:
      - APP_PORT=${APP_PORT}
      - KAFKA_BOOTSTRAP_SERVER=${KAFKA_BOOTSTRAP_SERVER}
      - EXTERNAL_DB_PORT=${EXTERNAL_DB_PORT}
      - POSTGRES_DB_NAME=${POSTGRES_DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - "spring.profiles.active=prod"
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - unit-2

volumes:
  pg_data:
    driver: local
  kafka_data:
    driver: local
  es_data:
    driver: local

networks:
  unit-2:
    driver: bridge